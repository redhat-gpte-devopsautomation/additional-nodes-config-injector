---
- name: Become block
  become: true
  block:
    - ansible.builtin.user:
        name: "{{ additional_nodes_config_injector_username }}"
        group: "{{ additional_nodes_config_injector_group }}"
        password: "{{ additional_nodes_config_injector_user_password | password_hash('sha512') | default(omit) }}"
      delegate_to: "{{ _hostname_ }}"

    - name: Enable sudo access for the user
      ansible.builtin.lineinfile:
        dest: /etc/sudoers.d/90-{{ additional_nodes_config_injector_username }}
        state: present
        create: true
        line: '{{ additional_nodes_config_injector_username }} ALL=(ALL) NOPASSWD: ALL'
      delegate_to: "{{ _hostname_ }}"

    - when: additional_nodes_config_injector_user_auth_type == "password"
      block:
        - name: Remove PasswordAuthentication line from 50-cloud-init.conf
          ansible.builtin.lineinfile:
            path: /etc/ssh/sshd_config.d/50-cloud-init.conf
            regexp: PasswordAuthentication
            state: absent
          delegate_to: "{{ _hostname_ }}"

        - name: Enable password ssh authentication
          ansible.builtin.lineinfile:
            line: PasswordAuthentication yes
            regexp: '^ *PasswordAuthentication'
            path: /etc/ssh/sshd_config
          delegate_to: "{{ _hostname_ }}"

        - name: Disable root password ssh authentication
          ansible.builtin.lineinfile:
            line: PermitRootLogin without-password
            regexp: '^ *PermitRootLogin'
            path: /etc/ssh/sshd_config
          delegate_to: "{{ _hostname_ }}"

        - name: Restart sshd to read conf changes
          ansible.builtin.service:
            name: sshd
            state: restarted
          delegate_to: "{{ _hostname_ }}"

    - name: Create .ssh directory
      ansible.builtin.file: 
        path: /home/{{ additional_nodes_config_injector_username }}/.ssh/
        state: directory
        owner: "{{ additional_nodes_config_injector_username }}"
        group: "{{ additional_nodes_config_injector_group }}"
        mode: 0700
      delegate_to: "{{ _hostname_ }}"

    - name: Copy the environment .pem key
      ansible.builtin.copy:
        src: "{{ hostvars.localhost.ssh_provision_key_path
              | default(hostvars.localhost.env_authorized_key_path) }}"
        dest: "/home/{{ additional_nodes_config_injector_username }}/.ssh/{{env_authorized_key}}.pem"
        owner: "{{ additional_nodes_config_injector_username }}"
        group: "{{ additional_nodes_config_injector_group }}"
        mode: 0400
      delegate_to: "{{ _hostname_ }}"

    - name: Copy public key in .ssh/authorized_keys
      ansible.builtin.copy:
        content: "{{ hostvars.localhost.ssh_provision_pubkey_content
          | default(hostvars.localhost.env_authorized_key_content_pub) }}"
        dest: "/home/{{ additional_nodes_config_injector_username }}/.ssh/{{env_authorized_key}}.pub"
        owner: "{{ additional_nodes_config_injector_username }}"
        group: "{{ additional_nodes_config_injector_group }}"
        mode: 0400
      delegate_to: "{{ _hostname_ }}"

    - name: Create authorized keys
      ansible.builtin.lineinfile:
        path: "/home/{{ additional_nodes_config_injector_username }}/.ssh/authorized_keys"
        line: "{{ hostvars.localhost.ssh_provision_pubkey_content
              | default(hostvars.localhost.env_authorized_key_content_pub) }}"
        create: true
        insertafter: 'EOF'
        state: present
        owner: "{{ additional_nodes_config_injector_username }}"
        group: "{{ additional_nodes_config_injector_group }}"
        mode: 0400
      delegate_to: "{{ _hostname_ }}"

    - name: Change IdentityFile being used in ssh config
      ansible.builtin.lineinfile:
        path: /home/{{ additional_nodes_config_injector_username }}/.ssh/config
        regexp: '^(.*IdentityFile.*)$'
        line: "IdentityFile /home/{{ additional_nodes_config_injector_username }}/.ssh/{{env_authorized_key}}.pem"
